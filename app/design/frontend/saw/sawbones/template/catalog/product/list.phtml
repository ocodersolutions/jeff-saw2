<?php $_productCollection=$this->getLoadedProductCollection(); $_helper = $this->helper('catalog/output'); if(!$_productCollection->count()): ?>
<p class="note-msg">
    <?php echo $this->__('There are no products matching the selection.') ?></p>
<?php else: 
echo $this->getToolbarHtml();  
if($this->getMode()!='grid'):
    $_iterator=0 ; ?>
<div class="listing-wrap">
    <?php foreach ($_productCollection as $_product): ?>
    <div class="listingrow w-row">

        <div class="listingcol1 w-col w-col-2 w-col-stack">
            <?php $_imgSize=300; ?>
            <a style="color: black;" href="<?php echo $_product->getProductUrl() ?>"?><img style="height: auto; max-height: 100%;" id="product-collection-image-<?php echo $_product->getId(); ?>" src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->keepFrame(false)->resize($_imgSize); ?>" alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" /></a>
        </div>
        <div class="listingcol2 w-col w-col-5 w-col-stack">
            <div class="listingcol2paddingdiv">
                <div class="itemdetinfotext listinginfo">
                    <a style="color: black;" href="<?php echo $_product->getProductUrl() ?>"?><?php echo $_helper->productAttribute($_product, $_product->getName() , 'name'); ?></a>
                    <br><span class="itemdetbigandbold"><?php echo ($currency_symbol = Mage::app()->getLocale()->currency( $currency_code )->getSymbol()); echo number_format($_product->getPrice(), 2, '.', '') ?></span>&nbsp; &nbsp;EA &nbsp; &nbsp; Lead Time: <span class="itemdetbold">14 days</span>
                </div>
                <div class="addtocartwrap listing">
                    <?php if(!$_product->canConfigure() && $_product->isSaleable()){ ?>
                    <div class="quantitytext">Quantity:</div>
                    <div class="addtocart_box">
                        <div class="quantityform">
                            <div class="quantitynumber">
                                <?php if(!$_product->isGrouped()): ?>
                                <input style="width: 100%; border: none;" type="text" name="qty" id="qty" placeholder="1" maxlength="12" value="<?php echo $_product->getProductDefaultQty() * 1 ?>" title="<?php echo $this->__('Qty') ?>" class="input-text qty input-quantity" />
                                <?php endif; ?>
                            </div>
                        </div>
                        <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                        <div class="addtocartbutton" style="margin-left: 12px; cursor: pointer" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')">
                            <div class="addtocarttext">Add to Cart</div>
                        </div>
                    </div>
                    <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                    <a style="color: white;" title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" href="<?php echo $_product->getProductUrl() ?>">
                        <?php echo $this->__('View Details') ?></a>
                    <?php else: 
                    echo $this->__('Out of stock');  
                    endif; ?>
                    <div class="addtomylists">
                        <?php if ($this->helper('wishlist')->isAllow()) : ?>
                        <a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>">
                            <?php echo $this->__('Add to Wishlist') ?></a>
                        <?php endif; ?>
                    </div>
                    <?php }else{ ?>
                    <div style="padding-top: 35px;">
                        <p style="float: left; center;color: red; line-height: 50px; font-weight: bold;">Out of stock</p>
                        <div class="addtocartbutton" style="float: right; margin-bottom: 15px;">
                            <a style="color: white;" title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" href="<?php echo $_product->getProductUrl() ?>">
                                <div class="addtocarttext">
                                    <?php if($_product->getStockItem() && $_product->getStockItem()->getIsInStock()){ echo $this->__('View Details'); } ?></div>
                            </a>
                        </div>
                        <div class="addtomylists" style="clear: both">
                            <?php if ($this->helper('wishlist')->isAllow()) : ?>
                            <a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>">
                                <?php echo $this->__('Add to Wishlist') ?></a>
                            <?php endif; ?>
                        </div>
                    </div>
                    <?php } ?>
                </div>
            </div>
        </div>



        <div class="listingcol3 w-col w-col-5 w-col-stack">

              <div class="height itemdetinfotext listinginfo">SKU:&nbsp;<?php  echo $this->htmlEscape($_product->getData('sku')); ?>
                <br>Model Type:&nbsp; 
                <?php  $model_type = $this->htmlEscape($_product->getData('model_type'));
                    switch ($model_type) {
                        case 11:
                            echo 'Accessories';
                        break;
                        case 54:
                            echo 'Advanced Soft Tissue';
                        break;
                        case 55:
                            echo 'Arthroscopy';
                        break;
                        case 56:
                            echo 'Biomechanical';
                        break;
                        case 57:
                            echo 'Blocks and Domes';
                        break;
                        case 58:
                            echo 'Charts';
                        break;
                        case 59:
                            echo 'Clamps and Holders';
                        break;
                        case 60:
                            echo 'Cylinders';
                        break;
                        case 61:
                            echo 'Digital File';
                        break;
                        case 62:
                            echo 'Display Models';
                        break;
                        case 63:
                            echo 'EZ-IO (Intraosseous Injection)';
                        break;
                        case 64:
                            echo 'Implant Replica';
                        break;
                        case 65:
                            echo 'Injection';
                        break;
                        case 66:
                            echo 'Joint Injection';
                        break;
                        case 67:
                            echo 'Ligaments and Tendons';
                        break;
                        case 68:
                            echo 'M.I.S.';
                        break;
                        case 69:
                            echo 'Multiple Fractures';
                        break;
                        case 70:
                            echo 'N/A';
                        break;
                        case 71:
                            echo 'Normal Anatomy';
                        break;
                        case 72:
                            echo 'Other';
                        break;
                        case 73:
                            echo 'Pathology';
                        break;
                        case 74:
                            echo 'Pediatric';
                        break;
                        case 75:
                            echo 'Pediatric Pathology';
                        break;
                        case 76:
                            echo 'Single Fracture';
                        break;

                        default:
                            echo '';
                        break;
                    }
                ?>
                
                <br>AnatomyMaterial:&nbsp; 
                <?php  $anatomy = $this->htmlEscape($_product->getData('anatomy')); 

                    switch ($anatomy) {
                        case 14:
                            echo 'Tibia';
                        break;
                        case 15:
                            echo 'Knee';
                        break;
                        case 16:
                            echo 'Scapula-Clavicle';
                        break;
                        case 17:
                            echo 'Foot';
                        break;
                        case 18:
                            echo 'Femur';
                        break;
                        case 19:
                            echo 'Humerus';
                        break;
                        case 20:
                            echo 'Radius';
                        break;
                        case 21:
                            echo 'Mandible-Maxilla';
                        break;
                        case 22:
                            echo 'Head and Neck';
                        break;
                        case 23:
                            echo 'Pelvis-Full';
                        break;
                        case 24:
                            echo 'Spine-Lumbar';
                        break;
                        case 25:
                            echo 'Hip';
                        break;
                        case 26:
                            echo 'Foot-Ankle';
                        break;
                        case 27:
                            echo 'Ankle';
                        break;
                        case 28:
                            echo 'Thoracic-Abdominal';
                        break;
                        case 29:
                            echo 'Leg';
                        break;
                        case 30:
                            echo 'Wrist';
                        break;
                        case 31:
                            echo 'Tibia-Fibula';
                        break;
                        case 32:
                            echo 'Ulna-Radius';
                        break;
                        case 33:
                            echo 'Elbow';
                        break;
                        case 34:
                            echo 'Fibula';
                        break;
                        case 35:
                            echo 'Shoulder';
                        break;
                        case 36:
                            echo 'Skull-Full';
                        break;
                        case 37:
                            echo 'Skull-Partial';
                        break;
                        case 38:
                            echo 'Sternum-Ribs';
                        break;
                        case 39:
                            echo 'Normal Anatomy';
                        break;
                        case 40:
                            echo 'Ulna';
                        break;
                        case 41:
                            echo 'Jaw';
                        break;
                        case 42:
                            echo 'Sacrum';
                        break;
                        case 43:
                            echo 'Phalanx';
                        break;
                        case 44:
                            echo 'Patella';
                        break;
                        case 45:
                            echo 'Forelimb';
                        break;
                        case 46:
                            echo 'Pelvis-Partial';
                        break;
                        case 47:
                            echo 'Spine';
                        break;
                        case 48:
                            echo 'Carpals';
                        break;
                        case 49:
                            echo 'Arm';
                        break;
                        case 50:
                            echo 'Spine-Thoracic';
                        break;
                        case 51:
                            echo 'Hand-Wrist';
                        break;
                        case 52:
                            echo 'Hand';
                        break;
                        case 53:
                            echo 'N/A';
                        break;

                        default:
                            echo '';
                        break;
                    }
                ?>

                <br>Size:&nbsp;
                <?php  $size = $this->htmlEscape($_product->getData('size'));
                    switch ($size) {
                        case 13:
                            echo 'Large';
                        break;
                        case 123:
                            echo 'Medium';
                        break;
                        case 124:
                            echo 'Small';
                        break;
                        case 125:
                            echo 'Pediatric';
                        break;
                        case 127:
                            echo 'Other';
                        break;

                        default:
                            echo 'N/A';
                        break;
                    }
                ?>
                <br>Color:&nbsp; 
                <?php  $color = $this->htmlEscape($_product->getData('color'));
                    switch ($color) {
                        case 9:
                            echo 'Off White';
                        break;
                        case 96:
                            echo 'White';
                        break;
                        case 97:
                            echo 'Clear';
                        break;
                        case 98:
                            echo 'Tan';
                        break;
                        case 99:
                            echo 'Black';
                        break;
                        case 100:
                            echo 'Blue';
                        break;
                        case 101:
                            echo 'Brown';
                        break;
                        case 102:
                            echo 'Clear';
                        break;
                        case 103:
                            echo 'Dark Red';
                        break;
                        case 104:
                            echo 'Gray';
                        break;
                        case 105:
                            echo 'Green';
                        break;
                        case 106:
                            echo 'N/A';
                        break;
                        case 107:
                            echo 'Off White';
                        break;
                        case 108:
                            echo 'Other';
                        break;
                        case 109:
                            echo 'Pink';
                        break;
                        case 110:
                            echo 'Red';
                        break;
                        case 111:
                            echo 'Red/Brown';
                        break;
                        case 112:
                            echo 'Tan';
                        break;
                        case 113:
                            echo 'Transparent';
                        break;
                        case 114:
                            echo 'White';
                        break;
                        case 115:
                            echo 'White/Transparent';
                        break;

                        default:
                            echo 'Yellow';
                        break;
                    }
                ?>
               
                <br>Orientation:&nbsp;
                 <?php  $orientation = $this->htmlEscape($_product->getData('orientation'));
                    switch ($orientation) {
                        case 12:
                            echo 'Left';
                        break;
                        case 117:
                            echo 'Right';
                        break;
                        case 118:
                            echo 'Proximal';
                        break;
                        case 119:
                            echo 'Distal';
                        break;
                        case 120:
                            echo 'Medial';
                        break;
                        case 121:
                            echo 'Lateral';
                        break;

                        default:
                            echo 'N/A';
                        break;
                    }

                ?>
                <br>
                <br><span class="itemdetailtextsmall">
            <?php echo substr($_helper->productAttribute($_product, $_product->getShortDescription(), 'short_description'),0,110); ?>
                        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $_productNameStripped ?>" class="link-learn"><?php echo $this->__('Learn More') ?></a>
        </span>
            </div>
        
        </div>
    </div>
    <?php endforeach; ?>
</div>
<script type="text/javascript">
    decorateList('products-list', 'none-recursive')
</script>
<?php else: 
$_collectionSize=$_productCollection->count(); 
$_columnCount=$this->getColumnCount(); ?>
<ul class="products-grid products-grid--max-<?php echo $_columnCount; ?>-col">
    <?php $i=0; foreach ($_productCollection as $_product): ?>
    <li class="item<?php if(($i-1)%$_columnCount==0): ?> first<?php elseif($i%$_columnCount==0): ?> last<?php endif; ?>">
        <a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" class="product-image">
            <?php $_imgSize=210; ?>
            <img id="product-collection-image-<?php echo $_product->getId(); ?>" src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize($_imgSize); ?>" alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true) ?>" />
        </a>
        <div class="product-info">
            <h2 class="product-name"><a href="<?php echo $_product->getProductUrl() ?>" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></a></h2>
            <?php echo $this->getPriceHtml($_product, true);
            if($_product->getRatingSummary()):
                echo $this->getReviewsSummaryHtml($_product, 'short');
            endif; ?>
            <div class="actions">
                <?php if(!$_product->canConfigure() && $_product->isSaleable()): ?>
                <button type="button" title="<?php echo $this->quoteEscape($this->__('Add to Cart')) ?>" class="button btn-cart" onclick="setLocation('<?php echo $this->getAddToCartUrl($_product) ?>')"><span><span><?php echo $this->__('Add to Cart') ?></span></span>
                </button>
                <?php elseif($_product->getStockItem() && $_product->getStockItem()->getIsInStock()): ?>
                <a title="<?php echo $this->quoteEscape($this->__('View Details')) ?>" class="button" href="<?php echo $_product->getProductUrl() ?>">
                    <?php echo $this->__('View Details') ?></a>
                <?php else: ?>
                <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span>
                </p>
                <?php endif; ?>
                <ul class="add-to-links">
                    <?php if ($this->helper('wishlist')->isAllow()) : ?>
                    <li>
                        <a href="<?php echo $this->helper('wishlist')->getAddUrl($_product) ?>" class="link-wishlist">
                            <?php echo $this->__('Add to Wishlist') ?></a>
                    </li>
                    <?php endif; 
                    if($_compareUrl=$this->getAddToCompareUrl($_product)): ?>
                    <li><span class="separator">|</span>
                        <a href="<?php echo $_compareUrl ?>" class="link-compare">
                            <?php echo $this->__('Add to Compare') ?></a>
                    </li>
                    <?php endif; ?>
                </ul>
            </div>
        </div>
    </li>
    <?php endforeach ?>
</ul>
<script type="text/javascript">
    decorateGeneric($$('ul.products-grid'), ['odd', 'even', 'first', 'last'])
</script>
<?php endif; ?>

<?php endif; ?>